/* tslint:disable */
/* eslint-disable */
/**
 * XStr.me API
 * OpenAPI specification for XStr.me services.  This API provides endpoints for managing and accessing XStr.me functionality. 
 *
 * The version of the OpenAPI document: 0.0.1-alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VersionResponse
 */
export interface VersionResponse {
    /**
     * API version
     * @type {string}
     * @memberof VersionResponse
     */
    version: string;
    /**
     * Build number or commit hash
     * @type {string}
     * @memberof VersionResponse
     */
    build: string;
    /**
     * Build timestamp
     * @type {Date}
     * @memberof VersionResponse
     */
    timestamp?: Date;
}

/**
 * Check if a given object implements the VersionResponse interface.
 */
export function instanceOfVersionResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "build" in value;

    return isInstance;
}

export function VersionResponseFromJSON(json: any): VersionResponse {
    return VersionResponseFromJSONTyped(json, false);
}

export function VersionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): VersionResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': json['version'],
        'build': json['build'],
        'timestamp': !exists(json, 'timestamp') ? undefined : (new Date(json['timestamp'])),
    };
}

export function VersionResponseToJSON(value?: VersionResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'build': value.build,
        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp.toISOString()),
    };
}

