/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package me.xstr.api.controller;

import me.xstr.api.model.VersionResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "Info", description = "API information operations")
public interface InfoApi {

    default InfoApiDelegate getDelegate() {
        return new InfoApiDelegate() {};
    }

    /**
     * GET /version : Get API version
     * Returns the current version of the API
     *
     * @return API version information (status code 200)
     */
    @Operation(
        operationId = "getVersion",
        summary = "Get API version",
        description = "Returns the current version of the API",
        tags = { "Info" },
        responses = {
            @ApiResponse(responseCode = "200", description = "API version information", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = VersionResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "BearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/version",
        produces = { "application/json" }
    )
    
    default ResponseEntity<VersionResponse> getVersion(
        
    ) {
        return getDelegate().getVersion();
    }

}
