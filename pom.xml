<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>me.xstr</groupId>
    <artifactId>api-spec</artifactId>
    <version>0.0.1-alpha</version>
    <name>xstr.me API Specification</name>
    <description>OpenAPI specification and Spring Boot server code generation for xstr.me</description>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <openapi-generator-maven-plugin.version>7.1.0</openapi-generator-maven-plugin.version>
        <spring-boot.version>3.2.0</spring-boot.version>
        <jakarta.validation.version>3.0.2</jakarta.validation.version>
        <jackson.version>2.15.3</jackson.version>
        <springdoc.version>2.3.0</springdoc.version>
    </properties>

    <dependencies>
        <!-- Spring Boot Starter Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!-- Spring Boot Starter Validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!-- Jakarta Validation API -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>${jakarta.validation.version}</version>
        </dependency>

        <!-- Jackson Core -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Jackson Annotations -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Jackson Databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- SpringDoc OpenAPI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>
        
        <!-- OpenAPI Generator Annotations -->
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-maven-plugin</artifactId>
            <version>${openapi-generator-maven-plugin.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Test Dependencies -->
        <!-- Spring Boot Test Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <!-- JUnit 5 (Jupiter) -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>

        <!-- Hamcrest -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- OpenAPI Generator Maven Plugin -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi-generator-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>generate-spring-server</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/api-spec.yml</inputSpec>
                            <generatorName>spring</generatorName>
                            <library>spring-boot</library>
                            <output>${project.basedir}</output>
                            <apiPackage>me.xstr.api.controller</apiPackage>
                            <modelPackage>me.xstr.api.model</modelPackage>
                            <invokerPackage>me.xstr.api</invokerPackage>
                            <configOptions>
                                <java8>true</java8>
                                <useJakartaEe>true</useJakartaEe>
                                <useSpringBoot3>true</useSpringBoot3>
                                <useBeanValidation>true</useBeanValidation>
                                <performBeanValidation>true</performBeanValidation>
                                <reactive>false</reactive>
                                <documentationProvider>springdoc</documentationProvider>
                                <annotationLibrary>swagger2</annotationLibrary>
                                <interfaceOnly>false</interfaceOnly>
                                <delegatePattern>true</delegatePattern>
                                <serviceInterface>true</serviceInterface>
                                <serviceImplementation>false</serviceImplementation>
                                <skipDefaultInterface>false</skipDefaultInterface>
                                <useTags>true</useTags>
                                <useOptional>true</useOptional>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <generateApiDocumentation>true</generateApiDocumentation>
                                <generateModelDocumentation>true</generateModelDocumentation>
                                <generateSupportingFiles>true</generateSupportingFiles>
                                <withXml>false</withXml>
                                <serializableModel>true</serializableModel>
                                <openApiNullable>false</openApiNullable>
                                <skipFormModel>true</skipFormModel>
                                <generateAliasAsModel>false</generateAliasAsModel>
                                <generateModelTests>true</generateModelTests>
                                <generateApiTests>true</generateApiTests>
                                <testPackage>me.xstr.api.test</testPackage>
                                <generateControllerTests>true</generateControllerTests>
                                <generateModelBuilders>true</generateModelBuilders>
                                <modelNameSuffix></modelNameSuffix>
                                <modelNamePrefix></modelNamePrefix>
                                <apiNameSuffix>Controller</apiNameSuffix>
                                <basePackage>me.xstr.api</basePackage>
                                <configPackage>me.xstr.api.configuration</configPackage>
                                <appName>XstrMEApiApplication</appName>
                            </configOptions>
                            <skipOverwrite>false</skipOverwrite>
                            <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                            <removeOperationIdPrefix>false</removeOperationIdPrefix>
                        </configuration>
                    </execution>
                    <execution>
                        <id>typescript-fetch-client</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/api-spec.yml</inputSpec>
                            <generatorName>typescript-fetch</generatorName>
                            <output>${project.basedir}/src/main/typescript</output>
                            <configOptions>
                                <npmName>xstr-api-client</npmName>
                                <npmVersion>1.0.0</npmVersion>
                                <supportsES6>true</supportsES6>
                                <typescriptThreePlus>true</typescriptThreePlus>
                                <withInterfaces>true</withInterfaces>
                                <useSingleRequestParameter>false</useSingleRequestParameter>
                                <prefixParameterInterfaces>true</prefixParameterInterfaces>
                                <stringEnums>true</stringEnums>
                                <modelPropertyNaming>camelCase</modelPropertyNaming>
                                <enumPropertyNaming>UPPERCASE</enumPropertyNaming>
                            </configOptions>
                            <skipOverwrite>false</skipOverwrite>
                            <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                            <removeOperationIdPrefix>false</removeOperationIdPrefix>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
            
            <!-- Maven Surefire Plugin for running tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Tests.java</include>
                        <include>**/*TestCase.java</include>
                    </includes>
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>            <!-- Note: TypeScript builds are handled manually with npm -->
            <!-- To build TypeScript client: -->
            <!-- 1. cd src/main/typescript && npm install && npm run build -->
            <!-- 2. cd src/test/typescript && npm install && npm test -->

            <!-- Maven Clean Plugin to clean TypeScript artifacts -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/typescript/dist</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>src/main/typescript/node_modules</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>src/test/typescript/coverage</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Exec Maven Plugin for additional Node.js tasks -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <!-- Run TypeScript tests from test directory -->
                    <execution>
                        <id>typescript-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>npm</executable>
                            <workingDirectory>src/test/typescript</workingDirectory>
                            <arguments>
                                <argument>test</argument>
                            </arguments>
                            <skip>${skipTests}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven Resources Plugin for copying TypeScript artifacts -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-typescript-dist</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/typescript-client</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/typescript</directory>
                                    <includes>
                                        <include>dist/**/*</include>
                                        <include>package.json</include>
                                        <include>README.md</include>
                                        <include>*.md</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- Note: TypeScript builds are handled manually with npm -->
    <!-- Available npm commands: -->
    <!-- cd src/main/typescript && npm install && npm run build -->
    <!-- cd src/test/typescript && npm install && npm test -->
    <!-- cd src/main/typescript && npm run lint && npm run format -->
</project>
